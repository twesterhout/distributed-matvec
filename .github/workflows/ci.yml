name: CI

on: [push, pull_request]

env:
  LS_HS_VERSION: "c2aef42"

defaults:
  run:
    shell: bash

jobs:
  linux_tests:
    runs-on: ubuntu-latest
    container:
      image: chapel/chapel:1.29.0 # or chapel/chapel-gasnet-smp if you want multi-locale
    steps:
    - uses: actions/checkout@v2
    - name: Install system dependencies
      run: |
        apt-get update
        apt-get install -y --no-install-recommends \
          patchelf bzip2 unzip \
          libnuma-dev libgmp-dev libffi-dev \
          libhdf5-dev libhdf5-hl-100

    - name: Install lattice-symmetries-haskell
      run: |
        wget --no-verbose https://github.com/twesterhout/lattice-symmetries-haskell/releases/download/continuous/lattice-symmetries-haskell-${LS_HS_VERSION}-ubuntu-18.04.tar.bz2
        tar -xf lattice-symmetries-haskell-${LS_HS_VERSION}-ubuntu-18.04.tar.bz2
        mv lattice-symmetries-haskell-${LS_HS_VERSION} third_party
        # patchelf --set-rpath '$ORIGIN' third_party/lib/liblattice_symmetries_haskell.so
        # ldd third_party/lib/liblattice_symmetries_haskell.so

    - name: Build
      run: |
        # source env/setup-env-comm-none.sh
        export LD_LIBRARY_PATH="$PWD/third_party/lib:$LD_LIBRARY_PATH"
        make

    - uses: actions/cache@v3
      name: Cache test data
      with:
        path: |
          data/matvec
        key: test-data
    - name: Test
      run: |
        if [ ! -d "data/matvec" ]; then make data/matvec; fi
        make check

    - name: Examples
      run: |
        export LD_LIBRARY_PATH="$PWD/third_party/lib:$LD_LIBRARY_PATH"
        bin/Example02
        bin/Example05

    - uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        miniforge-version: latest
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: ci_devel
        environment-file: conda-ci-linux.yml

    - uses: actions/cache@v3
      name: Cache Chapel runtime
      with:
        path: |
          /opt/chapel
        key: chapel-runtime

    - name: Build Chapel runtime
      run: |
        source env/setup-env-comm-none.sh
        $CHPL_HOME/util/chplenv/printchplbuilds.py
        pushd $CHPL_HOME
        make -j2
        popd

    - name: Build foreign library
      run: |
        source env/setup-env-comm-none.sh
        make OPTIMIZATION=--fast release

    - uses: actions/upload-artifact@v3
      with:
        name: lattice-symmetries-chapel-linux
        path: lattice-symmetries-chapel-*.tar.bz2

  mac_tests:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        brew install chapel hdf5

        wget -q https://github.com/twesterhout/lattice-symmetries-haskell/releases/download/continuous/lattice-symmetries-haskell-${LS_HS_VERSION}-macos-latest.tar.bz2
        tar -xf lattice-symmetries-haskell-${LS_HS_VERSION}-macos-latest.tar.bz2
        mv lattice-symmetries-haskell-${LS_HS_VERSION} third_party
        otool -L third_party/lib/liblattice_symmetries_haskell.dylib

    - name: Build
      run: |
        make

    - uses: actions/cache@v3
      name: Cache test data
      with:
        path: |
          data/matvec
        key: test-data
    - name: Test
      run: |
        if [ ! -d "data/matvec" ]; then make data/matvec; fi
        make check

    - name: Examples
      run: |
        export DYLD_LIBRARY_PATH=$PWD/third_party/lib:$DYLD_LIBRARY_PATH
        bin/Example02
        bin/Example05

    - name: Build foreign library
      run: |
        make OPTIMIZATION=--fast release

    - uses: actions/upload-artifact@v3
      with:
        name: lattice-symmetries-chapel-macos
        path: lattice-symmetries-chapel-*.tar.bz2

  conda_release:
    name: Creating a Conda package
    needs: [linux_tests]
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      run: |
        git clone --depth=1 https://github.com/twesterhout/lattice-symmetries-haskell.git

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: lattice-symmetries-chapel-linux
    - name: Inspect directory after downloading artifacts
      run: |
        ls -alFR

    - name: Move to the target folder
      run: |
        tar -xf lattice-symmetries-chapel-*.tar.bz2
        rm lattice-symmetries-chapel-*.tar.bz2
        mv lattice-symmetries-chapel-*/ lattice-symmetries-haskell/python/lattice_symmetries/

    - uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        miniforge-version: latest
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: ci_devel
        environment-file: lattice-symmetries-haskell/conda-ci-linux.yml

    - name: Build Conda package
      run: |
        cd lattice-symmetries-haskell/python
        conda env list
        source ~/.profile
        conda activate ci_devel
        mamba build -c conda-forge conda/
